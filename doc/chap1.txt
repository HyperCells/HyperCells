  
  [1X1 [33X[0;0YIntroduction[133X[101X
  
  [33X[0;0YHyperCells  is  a  package  that  allows  constructing  primitive  cells and
  supercells  of  hyperbolic  lattices  based on triangle groups and quotients
  with  normal  subgroups.  An  introduction to the underlying concepts can be
  found in the following preprint[133X
  
  [30X    [33X[0;6YP.   M.   Lenggenhager,  J.  Maciejko,  and  T.  BzduÅ¡ek,  [13XNon-Abelian
        hyperbolic  band  theory from supercells[113X, Phys. Rev. Lett. (accepted),
        arXiv:2305.04945 (2023) [LMB23][133X
  
  [33X[0;0Yand the doctoral thesis[133X
  
  [30X    [33X[0;6YP. M. Lenggenhager, [13XEmerging avenues in band theory: multigap topology
        and hyperbolic lattices[113X, PhD thesis, ETH Zurich (2023) [Len23][133X
  
  [33X[0;0YIf you use this package, please cite at least one of the above references in
  addition to the package itself:[133X
  
  [30X    [33X[0;6YP.  M.  Lenggenhager,  J.  Maciejko, and T. BzduÅ¡ek, [13XHyperCells: A GAP
        package  for constructing primitive cells and supercells of hyperbolic
        lattices[113X, [7Xhttps://github.com/patrick-lenggenhager/HyperCells[107X (2023)[133X
  
  [33X[0;0Yand the list of quotient groups:[133X
  
  [30X    [33X[0;6YM.  Conder, [13XQuotients of triangle groups acting on surfaces of genus 2
        to 101[113X (2007) [Con07][133X
  
  [33X[0;0YMore  information  on how to cite, including BibTeX entries, can be found in
  the Readme file of the package repository given above.[133X
  
  
  [1X1.1 [33X[0;0YExample[133X[101X
  
  [33X[0;0YIn  this  section,  some  basic examples illustrating the use are shown. For
  more  details,  please  refer  to the documentation of the individual types,
  operators, and functions.[133X
  
  [33X[0;0YA typical workflow starts by setting up the (proper) triangle group, here we
  choose [23X\Delta^+(2,8,8)[123X:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xtg := ProperTriangleGroup( [ 2, 8, 8 ] );[127X[104X
    [4X[28XProperTriangleGroup(2, 8, 8)[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  returned  object is of category [10XProperTriangleGroup[110X (see [14X2.1[114X). Next, we
  specify a unit cell of the lattice in terms of the quotient of [23X\Delta^+[123X with
  a  translation  group [23X\Gamma\triangleleft\Delta^+[123X. For that we can query the
  included database based on the work of Marston Conder [Con07]:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XListTGQuotients( [ 2, 8, 8 ] );[127X[104X
    [4X[28X[ [ 2, 6 ], [ 3, 10 ], [ 3, 11 ], [ 5, 12 ], [ 5, 13 ], [ 9, 19 ], ... ][128X[104X
  [4X[32X[104X
  
  [33X[0;0Ywhich allows us to select one of them, here the one denoted by [10XT2.6[110X, where 2
  is  the  genus  of  the  surface on which the quotient group acts, and 6 the
  position in the list of all quotients with the same genus.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xq := TGQuotient( [ 2, 6 ] );[127X[104X
    [4X[28XTGQuotient([ 2, 6 ], [ 2, 8, 8 ], 8, 2, Action reflexible [m,n],[128X[104X
    [4X[28X    [ x^2, x * y * z, x * z * y, y^3 * z^-1 ])[128X[104X
  [4X[32X[104X
  
  [33X[0;0Yas  an object of category [10XTGQuotient[110X (see [14X2.3[114X). Alternatively, we can access
  the first entry appearing for [23X\Delta^+(2,8,8)[123X using[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xq := TGQuotient( 1, [ 2, 8, 8 ] );[127X[104X
    [4X[28XTGQuotient([ 2, 6 ], [ 2, 8, 8 ], 8, 2, Action reflexible [m,n],[128X[104X
    [4X[28X    [ x^2, x * y * z, x * z * y, y^3 * z^-1 ])[128X[104X
  [4X[32X[104X
  
  [33X[0;0YOnce we have the triangle group and the [10XTGQuotient[110X object, we can obtain the
  quotient group [23XG^+\cong\Delta^+/\Gamma[123X[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XG := TGQuotientGroup( tg, q );[127X[104X
    [4X[28X<fp group on the generators [ x, y, z ]>[128X[104X
  [4X[32X[104X
  
  [33X[0;0Yor the associated translation group [23X\Gamma[123X[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XTGTranslationGroup( tg, q );[127X[104X
    [4X[28XTranslationGroup( < g1, g2, g3, g4 | g4*g3*g2*g1*g2^-1*g4^-1*g1^-1*g3^-1 > )[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  next  step  is to construct the graph representing primitive cell. This
  graph  corresponds to a triangular tessellation of the compactified cell and
  is stored as an object of category [10XTGCellGraph[110X (see [14X3.7[114X). In addition to the
  triangle group and quotient, we also need to specify the vertex at which the
  cell  should  be centered (here we choose [10X3[110X corresponding to the [23Xz[123X vertex of
  the fundamental Schwarz triangle):[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xcg := TGCellGraph( tg, q, 3 : simplify := 5 );[127X[104X
    [4X[28XTGCellGraph([128X[104X
    [4X[28X    TGCell( ProperTriangleGroup(2, 8, 8), [ x^2, x*y*z, x*z*y, y^3*z^-1 ] ),[128X[104X
    [4X[28X    center = 3,[128X[104X
    [4X[28X    vertices = [ [ 1, 1 ], [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 2, 1 ], [ 3, 1 ] ],[128X[104X
    [4X[28X    edges = [ [ 1, 6, 1, <identity ...> ], ..., [ 6, 5, 8, g1^-1*g2*g3^-1 ] ],[128X[104X
    [4X[28X    faces = [ [ [ 3, 1 ], [ 2, 1 ], [ 14, -1 ], [ 6, -1 ] ], ... ],[128X[104X
    [4X[28X    boundary = [ [ <identity ...>, <identity ...>, 2, 1, 0, g1 ], ... ][128X[104X
    [4X[28X)[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  option [10Xsimplify[110X specifies the maximum wordlength that should be checked
  for  simplifying  expressions in terms of the translation generators [10Xg1[110X, [10Xg2[110X,
  etc. The default value is [10X0[110X which means that no simplification is performed.
  While   the   graph  itself  represents  the  compactified  cell,  potential
  translations associated with the edges crossing from one copy of the cell to
  another  are  stored  as  well.  See  [14X3.7[114X for more details the format of the
  vertices, edges, faces, and the boundary.[133X
  
  [33X[0;0YThe  cell graph can be exported using the [2XExport[102X ([14X3.7-13[114X) operation, see [14X7.1[114X
  for  more  details  on  the  produced  file  format to import it using other
  software.[133X
  
  [33X[0;0YWith  the  cell  graph  at  hand,  we  can  derive  a model graph, such as a
  tessellation   graph,  i.e.,  the  nearest-neighbor  graph  of  the  [23X\{8,8\}[123X
  tessellation of the hyperbolic plane restricted to the primitive cell:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xmodel := TessellationModelGraph( cg, true : simplify := 0 );[127X[104X
    [4X[28XTGCellModelGraph([128X[104X
    [4X[28X    TGCell( ProperTriangleGroup(2, 8, 8), [ x^2, x*y*z, x*z*y, y^3*z^-1 ] ),[128X[104X
    [4X[28X    center = 3,[128X[104X
    [4X[28X    type = [ "TESS", [ 8, 8 ], [ "VEF", [ [ 3 ], [ 1 ], [ 2 ] ] ] ],[128X[104X
    [4X[28X    vertices = [ [ 3, 1 ] ],[128X[104X
    [4X[28X    edges = [ [ 1, 1, [ 1, [ 1, 1, 5 ] ], g1 ], [ 1, 1, [ 1, [ 2, 4, 8 ] ], g4 ],[128X[104X
    [4X[28X        [ 1, 1, [ 1, [ 3, 2, 6 ] ], g2 ], [ 1, 1, [ 1, [ 4, 3, 7 ] ], g3 ] ],[128X[104X
    [4X[28X    faces = [ [ [ 1, -1 ], [ 2, -1 ], [ 4, 1 ], [ 3, -1 ], [ 1, 1 ], [ 2, 1 ],[128X[104X
    [4X[28X        [ 4, -1 ], [ 3, 1 ] ] ][128X[104X
    [4X[28X)[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe result is an object of category [10XTGCellModelGraph[110X (see [14X4.1[114X), which can be
  exported  using the [2XExport[102X ([14X4.4-1[114X) operation, producing a file in the format
  described in [14X7.2[114X.[133X
  
  [33X[0;0YFinally,  the model graph defined on the primitive cell can be [13Xextended[113X to a
  [13Xsupercell[113X,    i.e.,   a   cell   specified   by   a   translation   subgroup
  [23X\Gamma'\triangleleft\Gamma[123X  of  the original translation group [23X\Gamma[123X. Here,
  we  consider  the  one  given  by the quotient [10XT3.11[110X and first construct the
  [13Xsymmetric[113X cell (but without simplifying the translation generators):[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xsc := TGCellSymmetric( tg, TGQuotient( [ 3, 11 ] ), 3 );[127X[104X
    [4X[28XTGCell( ProperTriangleGroup(2, 8, 8), [ x^2, x*y*z, x*z*y, y^-8 ] )[128X[104X
  [4X[32X[104X
  
  [33X[0;0Yand then construct the supercell model graph:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xscmodel := TGSuperCellModelGraph( model, sc : simplify := 0 );[127X[104X
    [4X[28XTGSuperCellModelGraph([128X[104X
    [4X[28X    primitive cell = TGCell( ProperTriangleGroup(2, 8, 8),[128X[104X
    [4X[28X        [ x^2, x*y*z, x*z*y, y^3*z^-1 ] ),[128X[104X
    [4X[28X    supercell = TGCell( ProperTriangleGroup(2, 8, 8),[128X[104X
    [4X[28X        [ x^2, x*y*z, x*z*y, y^-8 ] ),[128X[104X
    [4X[28X    cell embedding = TGCellEmbedding([128X[104X
    [4X[28X        primitive cell = TGCellTranslationGroup( < g1, g2, g3, g4 |[128X[104X
    [4X[28X            g2*g1^-1*g4^-1*g3*g2^-1*g1*g4*g3^-1 > ),[128X[104X
    [4X[28X        supercell = TGCellTranslationGroup( < g1, g2, g3, g4, g5, g6 |[128X[104X
    [4X[28X            g6*g4*g2*g1*g3*g5*g3^-1*g2^-1*g6^-1*g5^-1*g1^-1*g4^-1 > ),[128X[104X
    [4X[28X        transversal = [ <identity ...>, (x^-1*y^-1)^4*x^-1 ],[128X[104X
    [4X[28X        embedding = [ g1, g2, g3, g4, g5, g6 ] -> [ g1^-1*g4^-1, ... ][128X[104X
    [4X[28X    ),[128X[104X
    [4X[28X    center = 3,[128X[104X
    [4X[28X    type = [ "TESS", [ 8, 8 ], [ "VEF", [ [ 3 ], [ 1 ], [ 2 ] ] ] ],[128X[104X
    [4X[28X    vertices = [ [ 3, 1, 1 ], [ 3, 1, 2 ] ],[128X[104X
    [4X[28X    edges = [ [ 1, 2, [ 1, 1, [ 1, [ 1, 1, 5 ] ] ], <identity ...> ], ... ],[128X[104X
    [4X[28X    faces = [ ][128X[104X
    [4X[28X)[128X[104X
  [4X[32X[104X
  
  [33X[0;0Ywhich  is  returned as an object of category [10XTGSuperCellModelGraph[110X (see [14X5.1[114X)
  and  can be exported using the [2XExport[102X ([14X5.5-1[114X) operation, producing a file in
  the format described in [14X7.3[114X.[133X
  
